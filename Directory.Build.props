<Project>
  <PropertyGroup>
    <!-- Generate XML docs for all projects to support API documentation. -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Suppress missing XML comment warnings to keep builds clean while docs evolve. -->
    <NoWarn>$(NoWarn);1591</NoWarn>
    <!-- CI-friendly builds (SourceLink, deterministic PDBs) -->
  <ContinuousIntegrationBuild Condition="'$(ContinuousIntegrationBuild)' == ''">true</ContinuousIntegrationBuild>
  <!-- SourceLink/Repo metadata -->
  <PublishRepositoryUrl>true</PublishRepositoryUrl>
  <EmbedUntrackedSources>true</EmbedUntrackedSources>
  <!-- NuGet package IDs: publish under Sylin.Sora.* while keeping code namespaces as Sora.* -->
  <PackageId Condition="'$(IsPackable)' == 'true' and '$(PackageId)' == ''">Sylin.$(AssemblyName)</PackageId>
  <!-- Common NuGet package metadata -->
  <Authors>Sylin Labs</Authors>
  <Company>Sylin Labs</Company>
  <PackageProjectUrl>https://github.com/sylin-labs/sora-framework</PackageProjectUrl>
  <RepositoryUrl>https://github.com/sylin-labs/sora-framework.git</RepositoryUrl>
  <RepositoryType>git</RepositoryType>
  <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
  <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
  <IncludeSymbols>true</IncludeSymbols>
  <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  <!-- Prefer a README.md in the project folder; fall back to repo root README.md -->
  <PackageReadmeFile Condition="Exists('$(MSBuildProjectDirectory)\README.md')">README.md</PackageReadmeFile>
  <PackageReadmeFile Condition="'$(PackageReadmeFile)' == '' and Exists('$(MSBuildThisFileDirectory)README.md')">README.md</PackageReadmeFile>
    <PackageReleaseNotes>See release notes: https://github.com/sylin-labs/sora-framework/releases</PackageReleaseNotes>
    <!-- Common tags; projects can append by using $(CommonPackageTags) in their PackageTags -->
    <CommonPackageTags>sora;framework;modular;dotnet;aspnetcore;cqrs;ddd;messaging;data;opentelemetry</CommonPackageTags>

  <!-- Baseline language/features across the repo -->
  <ImplicitUsings Condition="'$(ImplicitUsings)' == ''">enable</ImplicitUsings>
  <Nullable Condition="'$(Nullable)' == ''">enable</Nullable>
  <!-- Prefer a modern compiler; projects can override if needed -->
  <LangVersion Condition="'$(LangVersion)' == ''">latestMajor</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <!-- Unified versioning across the repo via Nerdbank.GitVersioning -->
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.6.143" PrivateAssets="all" />
  <!-- SourceLink for better debugging experience on NuGet -->
  <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
  <!-- Pack project-level README if present; otherwise include repo README -->
  <None Include="$(MSBuildProjectDirectory)\README.md" Pack="true" PackagePath="/" Condition="Exists('$(MSBuildProjectDirectory)\README.md')" />
  <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="/" Condition="!Exists('$(MSBuildProjectDirectory)\README.md') and Exists('$(MSBuildThisFileDirectory)README.md')" />
    <!-- If you provide an icon.png at repo root, it will be packed and used automatically -->
    <None Include="$(MSBuildThisFileDirectory)icon.png" Pack="true" PackagePath="/" Condition="Exists('$(MSBuildThisFileDirectory)icon.png')" />
  <None Include="$(MSBuildThisFileDirectory)resources\image\0_2.jpg" Pack="true" PackagePath="/" Condition="Exists('$(MSBuildThisFileDirectory)resources\image\0_2.jpg')" />
  </ItemGroup>
  <PropertyGroup Condition="Exists('$(MSBuildThisFileDirectory)icon.png')">
    <PackageIcon>icon.png</PackageIcon>
  </PropertyGroup>
  <PropertyGroup Condition="!Exists('$(MSBuildThisFileDirectory)icon.png') and Exists('$(MSBuildThisFileDirectory)resources\\image\\0_2.jpg')">
    <PackageIcon>0_2.jpg</PackageIcon>
  </PropertyGroup>
</Project>
