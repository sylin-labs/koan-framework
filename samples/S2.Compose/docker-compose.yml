version: '3.9'
services:
  mongo:
    image: mongo:7
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10
  api:
    build:
      context: ../..
      dockerfile: samples/S2.Api/Dockerfile
    environment:
      ASPNETCORE_URLS: http://+:5054
      ConnectionStrings__Default: mongodb://mongo:27017
      Sora__Data__Mongo__Database: s2
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_ENVIRONMENT: Development
  # Sora.Web: running behind a reverse proxy; let proxy own security headers
      Sora__Web__IsProxiedApi: "true"
  # Enable Swagger UI in non-development per Sora.Web.Swagger policy
      Sora__Web__Swagger__Enabled: "true"
  # Optional OpenTelemetry endpoint (enable by uncommenting the collector service below)
  # OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "5054:5054"
    command: ["dotnet", "S2.Api.dll"]
  client:
    build:
      context: ../S2.Client
    depends_on:
      api:
        condition: service_started
    ports:
      - "5055:80"
  probe:
    image: alpine:3.20
    depends_on:
      api:
        condition: service_started
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache curl >/dev/null 2>&1; sleep 2; curl -sf http://api:5054/api/health && curl -sf -X POST http://api:5054/api/items -H 'Content-Type: application/json' -d '{\"name\":\"probe\"}' && curl -sf -X POST http://api:5054/api/items/seed/2 -H 'Content-Type: application/json' -d '{}' && curl -sf -X DELETE http://api:5054/api/items/clear && curl -sf http://api:5054/api/items | head -c 200"]

  # otel-collector:
  #   image: otel/opentelemetry-collector:0.108.0
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
  #   ports:
  #     - "4317:4317"  # OTLP gRPC in
  #   healthcheck:
  #     test: ["CMD", "sh", "-c", "nc -z localhost 4317"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10
