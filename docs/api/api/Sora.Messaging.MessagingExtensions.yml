### YamlMime:ManagedReference
items:
- uid: Sora.Messaging.MessagingExtensions
  commentId: T:Sora.Messaging.MessagingExtensions
  id: MessagingExtensions
  parent: Sora.Messaging
  children:
  - Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0}})
  - Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,``0})
  - Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - Sora.Messaging.MessagingExtensions.OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder})
  - Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0}})
  - Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - Sora.Messaging.MessagingExtensions.Send(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.Send(System.Object,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendAsBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendAsBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendTo(System.Collections.Generic.IEnumerable{System.Object},System.String,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendTo(System.Object,System.String,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.SendTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  - Sora.Messaging.MessagingExtensions.Send``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MessagingExtensions
  nameWithType: MessagingExtensions
  fullName: Sora.Messaging.MessagingExtensions
  type: Class
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: MessagingExtensions
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 5
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static class MessagingExtensions
    content.vb: Public Module MessagingExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Sora.Messaging.MessagingExtensions.Send(System.Object,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.Send(System.Object,System.Threading.CancellationToken)
  id: Send(System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: Send(object, CancellationToken)
  nameWithType: MessagingExtensions.Send(object, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.Send(object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: Send
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 7
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task Send(this object message, CancellationToken ct = default)
    parameters:
    - id: message
      type: System.Object
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function Send(message As Object, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.Send*
  nameWithType.vb: MessagingExtensions.Send(Object, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.Send(Object, System.Threading.CancellationToken)
  name.vb: Send(Object, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendTo(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendTo(System.Object,System.String,System.Threading.CancellationToken)
  id: SendTo(System.Object,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendTo(object, string, CancellationToken)
  nameWithType: MessagingExtensions.SendTo(object, string, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendTo(object, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendTo
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 10
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendTo(this object message, string busCode, CancellationToken ct = default)
    parameters:
    - id: message
      type: System.Object
    - id: busCode
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendTo(message As Object, busCode As String, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendTo*
  nameWithType.vb: MessagingExtensions.SendTo(Object, String, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendTo(Object, String, System.Threading.CancellationToken)
  name.vb: SendTo(Object, String, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.Send``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.Send``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  id: Send``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: Send<T>(IEnumerable<T>, CancellationToken)
  nameWithType: MessagingExtensions.Send<T>(IEnumerable<T>, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.Send<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: Send
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 13
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task Send<T>(this IEnumerable<T> messages, CancellationToken ct = default)
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function Send(Of T)(messages As IEnumerable(Of T), ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.Send*
  nameWithType.vb: MessagingExtensions.Send(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.Send(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: Send(Of T)(IEnumerable(Of T), CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  id: SendTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendTo<T>(IEnumerable<T>, string, CancellationToken)
  nameWithType: MessagingExtensions.SendTo<T>(IEnumerable<T>, string, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendTo<T>(System.Collections.Generic.IEnumerable<T>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendTo
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 16
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendTo<T>(this IEnumerable<T> messages, string busCode, CancellationToken ct = default)
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: busCode
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendTo(Of T)(messages As IEnumerable(Of T), busCode As String, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendTo*
  nameWithType.vb: MessagingExtensions.SendTo(Of T)(IEnumerable(Of T), String, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendTo(Of T)(System.Collections.Generic.IEnumerable(Of T), String, System.Threading.CancellationToken)
  name.vb: SendTo(Of T)(IEnumerable(Of T), String, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.Send(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.Send(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  id: Send(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: Send(IEnumerable<object>, CancellationToken)
  nameWithType: MessagingExtensions.Send(IEnumerable<object>, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.Send(System.Collections.Generic.IEnumerable<object>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: Send
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 20
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task Send(this IEnumerable<object> messages, CancellationToken ct = default)
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{System.Object}
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function Send(messages As IEnumerable(Of Object), ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.Send*
  nameWithType.vb: MessagingExtensions.Send(IEnumerable(Of Object), CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.Send(System.Collections.Generic.IEnumerable(Of Object), System.Threading.CancellationToken)
  name.vb: Send(IEnumerable(Of Object), CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendTo(System.Collections.Generic.IEnumerable{System.Object},System.String,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendTo(System.Collections.Generic.IEnumerable{System.Object},System.String,System.Threading.CancellationToken)
  id: SendTo(System.Collections.Generic.IEnumerable{System.Object},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendTo(IEnumerable<object>, string, CancellationToken)
  nameWithType: MessagingExtensions.SendTo(IEnumerable<object>, string, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendTo(System.Collections.Generic.IEnumerable<object>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendTo
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 23
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendTo(this IEnumerable<object> messages, string busCode, CancellationToken ct = default)
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{System.Object}
    - id: busCode
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendTo(messages As IEnumerable(Of Object), busCode As String, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendTo*
  nameWithType.vb: MessagingExtensions.SendTo(IEnumerable(Of Object), String, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendTo(System.Collections.Generic.IEnumerable(Of Object), String, System.Threading.CancellationToken)
  name.vb: SendTo(IEnumerable(Of Object), String, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  id: SendBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendBatch<T>(IEnumerable<T>, CancellationToken)
  nameWithType: MessagingExtensions.SendBatch<T>(IEnumerable<T>, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendBatch<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendBatch
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 27
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendBatch<T>(this IEnumerable<T> items, CancellationToken ct = default)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendBatch(Of T)(items As IEnumerable(Of T), ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendBatch*
  nameWithType.vb: MessagingExtensions.SendBatch(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendBatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: SendBatch(Of T)(IEnumerable(Of T), CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  id: SendBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendBatchTo<T>(IEnumerable<T>, string, CancellationToken)
  nameWithType: MessagingExtensions.SendBatchTo<T>(IEnumerable<T>, string, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendBatchTo<T>(System.Collections.Generic.IEnumerable<T>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendBatchTo
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 30
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendBatchTo<T>(this IEnumerable<T> items, string busCode, CancellationToken ct = default)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: busCode
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendBatchTo(Of T)(items As IEnumerable(Of T), busCode As String, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendBatchTo*
  nameWithType.vb: MessagingExtensions.SendBatchTo(Of T)(IEnumerable(Of T), String, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendBatchTo(Of T)(System.Collections.Generic.IEnumerable(Of T), String, System.Threading.CancellationToken)
  name.vb: SendBatchTo(Of T)(IEnumerable(Of T), String, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendAsBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendAsBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  id: SendAsBatch``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendAsBatch<T>(IEnumerable<T>, CancellationToken)
  nameWithType: MessagingExtensions.SendAsBatch<T>(IEnumerable<T>, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendAsBatch<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendAsBatch
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 34
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendAsBatch<T>(this IEnumerable<T> items, CancellationToken ct = default)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendAsBatch(Of T)(items As IEnumerable(Of T), ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendAsBatch*
  nameWithType.vb: MessagingExtensions.SendAsBatch(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendAsBatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: SendAsBatch(Of T)(IEnumerable(Of T), CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.SendAsBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  commentId: M:Sora.Messaging.MessagingExtensions.SendAsBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  id: SendAsBatchTo``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: SendAsBatchTo<T>(IEnumerable<T>, string, CancellationToken)
  nameWithType: MessagingExtensions.SendAsBatchTo<T>(IEnumerable<T>, string, CancellationToken)
  fullName: Sora.Messaging.MessagingExtensions.SendAsBatchTo<T>(System.Collections.Generic.IEnumerable<T>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: SendAsBatchTo
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 37
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static Task SendAsBatchTo<T>(this IEnumerable<T> items, string busCode, CancellationToken ct = default)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: busCode
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendAsBatchTo(Of T)(items As IEnumerable(Of T), busCode As String, ct As CancellationToken = Nothing) As Task
  overload: Sora.Messaging.MessagingExtensions.SendAsBatchTo*
  nameWithType.vb: MessagingExtensions.SendAsBatchTo(Of T)(IEnumerable(Of T), String, CancellationToken)
  fullName.vb: Sora.Messaging.MessagingExtensions.SendAsBatchTo(Of T)(System.Collections.Generic.IEnumerable(Of T), String, System.Threading.CancellationToken)
  name.vb: SendAsBatchTo(Of T)(IEnumerable(Of T), String, CancellationToken)
- uid: Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task})
  commentId: M:Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnMessage<T>(IServiceCollection, Func<MessageEnvelope, T, CancellationToken, Task>)
  nameWithType: MessagingExtensions.OnMessage<T>(IServiceCollection, Func<MessageEnvelope, T, CancellationToken, Task>)
  fullName: Sora.Messaging.MessagingExtensions.OnMessage<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<Sora.Messaging.MessageEnvelope, T, System.Threading.CancellationToken, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnMessage
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 41
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnMessage<T>(this IServiceCollection services, Func<MessageEnvelope, T, CancellationToken, Task> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Func{Sora.Messaging.MessageEnvelope,{T},System.Threading.CancellationToken,System.Threading.Tasks.Task}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnMessage(Of T)(services As IServiceCollection, handler As Func(Of MessageEnvelope, T, CancellationToken, Task)) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnMessage*
  nameWithType.vb: MessagingExtensions.OnMessage(Of T)(IServiceCollection, Func(Of MessageEnvelope, T, CancellationToken, Task))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnMessage(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of Sora.Messaging.MessageEnvelope, T, System.Threading.CancellationToken, System.Threading.Tasks.Task))
  name.vb: OnMessage(Of T)(IServiceCollection, Func(Of MessageEnvelope, T, CancellationToken, Task))
- uid: Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,``0})
  commentId: M:Sora.Messaging.MessagingExtensions.OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,``0})
  id: OnMessage``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,``0})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnMessage<T>(IServiceCollection, Action<MessageEnvelope, T>)
  nameWithType: MessagingExtensions.OnMessage<T>(IServiceCollection, Action<MessageEnvelope, T>)
  fullName: Sora.Messaging.MessagingExtensions.OnMessage<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Sora.Messaging.MessageEnvelope, T>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnMessage
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 47
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnMessage<T>(this IServiceCollection services, Action<MessageEnvelope, T> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Action{Sora.Messaging.MessageEnvelope,{T}}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnMessage(Of T)(services As IServiceCollection, handler As Action(Of MessageEnvelope, T)) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnMessage*
  nameWithType.vb: MessagingExtensions.OnMessage(Of T)(IServiceCollection, Action(Of MessageEnvelope, T))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnMessage(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Sora.Messaging.MessageEnvelope, T))
  name.vb: OnMessage(Of T)(IServiceCollection, Action(Of MessageEnvelope, T))
- uid: Sora.Messaging.MessagingExtensions.OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder})
  commentId: M:Sora.Messaging.MessagingExtensions.OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder})
  id: OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnMessages(IServiceCollection, Action<MessageHandlerBuilder>)
  nameWithType: MessagingExtensions.OnMessages(IServiceCollection, Action<MessagingExtensions.MessageHandlerBuilder>)
  fullName: Sora.Messaging.MessagingExtensions.OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Sora.Messaging.MessagingExtensions.MessageHandlerBuilder>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnMessages
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 54
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnMessages(this IServiceCollection services, Action<MessagingExtensions.MessageHandlerBuilder> configure)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: configure
      type: System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnMessages(services As IServiceCollection, configure As Action(Of MessagingExtensions.MessageHandlerBuilder)) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnMessages*
  nameWithType.vb: MessagingExtensions.OnMessages(IServiceCollection, Action(Of MessagingExtensions.MessageHandlerBuilder))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnMessages(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Sora.Messaging.MessagingExtensions.MessageHandlerBuilder))
  name.vb: OnMessages(IServiceCollection, Action(Of MessageHandlerBuilder))
- uid: Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  commentId: M:Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnBatch<T>(IServiceCollection, Func<MessageEnvelope, Batch<T>, CancellationToken, Task>)
  nameWithType: MessagingExtensions.OnBatch<T>(IServiceCollection, Func<MessageEnvelope, Batch<T>, CancellationToken, Task>)
  fullName: Sora.Messaging.MessagingExtensions.OnBatch<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnBatch
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 88
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnBatch<T>(this IServiceCollection services, Func<MessageEnvelope, Batch<T>, CancellationToken, Task> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnBatch(Of T)(services As IServiceCollection, handler As Func(Of MessageEnvelope, Batch(Of T), CancellationToken, Task)) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnBatch*
  nameWithType.vb: MessagingExtensions.OnBatch(Of T)(IServiceCollection, Func(Of MessageEnvelope, Batch(Of T), CancellationToken, Task))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnBatch(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task))
  name.vb: OnBatch(Of T)(IServiceCollection, Func(Of MessageEnvelope, Batch(Of T), CancellationToken, Task))
- uid: Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0}})
  commentId: M:Sora.Messaging.MessagingExtensions.OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0}})
  id: OnBatch``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0}})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnBatch<T>(IServiceCollection, Action<MessageEnvelope, Batch<T>>)
  nameWithType: MessagingExtensions.OnBatch<T>(IServiceCollection, Action<MessageEnvelope, Batch<T>>)
  fullName: Sora.Messaging.MessagingExtensions.OnBatch<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch<T>>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnBatch
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 94
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnBatch<T>(this IServiceCollection services, Action<MessageEnvelope, Batch<T>> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{{T}}}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnBatch(Of T)(services As IServiceCollection, handler As Action(Of MessageEnvelope, Batch(Of T))) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnBatch*
  nameWithType.vb: MessagingExtensions.OnBatch(Of T)(IServiceCollection, Action(Of MessageEnvelope, Batch(Of T)))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnBatch(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch(Of T)))
  name.vb: OnBatch(Of T)(IServiceCollection, Action(Of MessageEnvelope, Batch(Of T)))
- uid: Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  commentId: M:Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnMessages<T>(IServiceCollection, Func<MessageEnvelope, IReadOnlyList<T>, CancellationToken, Task>)
  nameWithType: MessagingExtensions.OnMessages<T>(IServiceCollection, Func<MessageEnvelope, IReadOnlyList<T>, CancellationToken, Task>)
  fullName: Sora.Messaging.MessagingExtensions.OnMessages<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnMessages
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 101
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnMessages<T>(this IServiceCollection services, Func<MessageEnvelope, IReadOnlyList<T>, CancellationToken, Task> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnMessages(Of T)(services As IServiceCollection, handler As Func(Of MessageEnvelope, IReadOnlyList(Of T), CancellationToken, Task)) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnMessages*
  nameWithType.vb: MessagingExtensions.OnMessages(Of T)(IServiceCollection, Func(Of MessageEnvelope, IReadOnlyList(Of T), CancellationToken, Task))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnMessages(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task))
  name.vb: OnMessages(Of T)(IServiceCollection, Func(Of MessageEnvelope, IReadOnlyList(Of T), CancellationToken, Task))
- uid: Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0}})
  commentId: M:Sora.Messaging.MessagingExtensions.OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0}})
  id: OnMessages``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0}})
  isExtensionMethod: true
  parent: Sora.Messaging.MessagingExtensions
  langs:
  - csharp
  - vb
  name: OnMessages<T>(IServiceCollection, Action<MessageEnvelope, IReadOnlyList<T>>)
  nameWithType: MessagingExtensions.OnMessages<T>(IServiceCollection, Action<MessageEnvelope, IReadOnlyList<T>>)
  fullName: Sora.Messaging.MessagingExtensions.OnMessages<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList<T>>)
  type: Method
  source:
    remote:
      path: src/Sora.Messaging.Core/MessagingExtensions.cs
      branch: dev
      repo: https://github.com/sylin-labs/sora-framework.git
    id: OnMessages
    path: ../../src/Sora.Messaging.Core/MessagingExtensions.cs
    startLine: 104
  assemblies:
  - Sora.Messaging.Core
  namespace: Sora.Messaging
  syntax:
    content: public static IServiceCollection OnMessages<T>(this IServiceCollection services, Action<MessageEnvelope, IReadOnlyList<T>> handler)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: handler
      type: System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{{T}}}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function OnMessages(Of T)(services As IServiceCollection, handler As Action(Of MessageEnvelope, IReadOnlyList(Of T))) As IServiceCollection
  overload: Sora.Messaging.MessagingExtensions.OnMessages*
  nameWithType.vb: MessagingExtensions.OnMessages(Of T)(IServiceCollection, Action(Of MessageEnvelope, IReadOnlyList(Of T)))
  fullName.vb: Sora.Messaging.MessagingExtensions.OnMessages(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList(Of T)))
  name.vb: OnMessages(Of T)(IServiceCollection, Action(Of MessageEnvelope, IReadOnlyList(Of T)))
references:
- uid: Sora.Messaging
  commentId: N:Sora.Messaging
  href: Sora.html
  name: Sora.Messaging
  nameWithType: Sora.Messaging
  fullName: Sora.Messaging
  spec.csharp:
  - uid: Sora
    name: Sora
    href: Sora.html
  - name: .
  - uid: Sora.Messaging
    name: Messaging
    href: Sora.Messaging.html
  spec.vb:
  - uid: Sora
    name: Sora
    href: Sora.html
  - name: .
  - uid: Sora.Messaging
    name: Messaging
    href: Sora.Messaging.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Sora.Messaging.MessagingExtensions.Send*
  commentId: Overload:Sora.Messaging.MessagingExtensions.Send
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_Send_System_Object_System_Threading_CancellationToken_
  name: Send
  nameWithType: MessagingExtensions.Send
  fullName: Sora.Messaging.MessagingExtensions.Send
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Sora.Messaging.MessagingExtensions.SendTo*
  commentId: Overload:Sora.Messaging.MessagingExtensions.SendTo
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_SendTo_System_Object_System_String_System_Threading_CancellationToken_
  name: SendTo
  nameWithType: MessagingExtensions.SendTo
  fullName: Sora.Messaging.MessagingExtensions.SendTo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Sora.Messaging.MessagingExtensions.SendBatch*
  commentId: Overload:Sora.Messaging.MessagingExtensions.SendBatch
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_SendBatch__1_System_Collections_Generic_IEnumerable___0__System_Threading_CancellationToken_
  name: SendBatch
  nameWithType: MessagingExtensions.SendBatch
  fullName: Sora.Messaging.MessagingExtensions.SendBatch
- uid: Sora.Messaging.MessagingExtensions.SendBatchTo*
  commentId: Overload:Sora.Messaging.MessagingExtensions.SendBatchTo
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_SendBatchTo__1_System_Collections_Generic_IEnumerable___0__System_String_System_Threading_CancellationToken_
  name: SendBatchTo
  nameWithType: MessagingExtensions.SendBatchTo
  fullName: Sora.Messaging.MessagingExtensions.SendBatchTo
- uid: Sora.Messaging.MessagingExtensions.SendAsBatch*
  commentId: Overload:Sora.Messaging.MessagingExtensions.SendAsBatch
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_SendAsBatch__1_System_Collections_Generic_IEnumerable___0__System_Threading_CancellationToken_
  name: SendAsBatch
  nameWithType: MessagingExtensions.SendAsBatch
  fullName: Sora.Messaging.MessagingExtensions.SendAsBatch
- uid: Sora.Messaging.MessagingExtensions.SendAsBatchTo*
  commentId: Overload:Sora.Messaging.MessagingExtensions.SendAsBatchTo
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_SendAsBatchTo__1_System_Collections_Generic_IEnumerable___0__System_String_System_Threading_CancellationToken_
  name: SendAsBatchTo
  nameWithType: MessagingExtensions.SendAsBatchTo
  fullName: Sora.Messaging.MessagingExtensions.SendAsBatchTo
- uid: Sora.Messaging.MessagingExtensions.OnMessage*
  commentId: Overload:Sora.Messaging.MessagingExtensions.OnMessage
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_OnMessage__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Func_Sora_Messaging_MessageEnvelope___0_System_Threading_CancellationToken_System_Threading_Tasks_Task__
  name: OnMessage
  nameWithType: MessagingExtensions.OnMessage
  fullName: Sora.Messaging.MessagingExtensions.OnMessage
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Func{Sora.Messaging.MessageEnvelope,{T},System.Threading.CancellationToken,System.Threading.Tasks.Task}
  commentId: T:System.Func{Sora.Messaging.MessageEnvelope,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<MessageEnvelope, T, CancellationToken, Task>
  nameWithType: Func<MessageEnvelope, T, CancellationToken, Task>
  fullName: System.Func<Sora.Messaging.MessageEnvelope, T, System.Threading.CancellationToken, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of MessageEnvelope, T, CancellationToken, Task)
  fullName.vb: System.Func(Of Sora.Messaging.MessageEnvelope, T, System.Threading.CancellationToken, System.Threading.Tasks.Task)
  name.vb: Func(Of MessageEnvelope, T, CancellationToken, Task)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Action{Sora.Messaging.MessageEnvelope,{T}}
  commentId: T:System.Action{Sora.Messaging.MessageEnvelope,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<MessageEnvelope, T>
  nameWithType: Action<MessageEnvelope, T>
  fullName: System.Action<Sora.Messaging.MessageEnvelope, T>
  nameWithType.vb: Action(Of MessageEnvelope, T)
  fullName.vb: System.Action(Of Sora.Messaging.MessageEnvelope, T)
  name.vb: Action(Of MessageEnvelope, T)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Sora.Messaging.MessagingExtensions.OnMessages*
  commentId: Overload:Sora.Messaging.MessagingExtensions.OnMessages
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_OnMessages_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Sora_Messaging_MessagingExtensions_MessageHandlerBuilder__
  name: OnMessages
  nameWithType: MessagingExtensions.OnMessages
  fullName: Sora.Messaging.MessagingExtensions.OnMessages
- uid: System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder}
  commentId: T:System.Action{Sora.Messaging.MessagingExtensions.MessageHandlerBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MessagingExtensions.MessageHandlerBuilder>
  nameWithType: Action<MessagingExtensions.MessageHandlerBuilder>
  fullName: System.Action<Sora.Messaging.MessagingExtensions.MessageHandlerBuilder>
  nameWithType.vb: Action(Of MessagingExtensions.MessageHandlerBuilder)
  fullName.vb: System.Action(Of Sora.Messaging.MessagingExtensions.MessageHandlerBuilder)
  name.vb: Action(Of MessagingExtensions.MessageHandlerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Sora.Messaging.MessagingExtensions
    name: MessagingExtensions
    href: Sora.Messaging.MessagingExtensions.html
  - name: .
  - uid: Sora.Messaging.MessagingExtensions.MessageHandlerBuilder
    name: MessageHandlerBuilder
    href: Sora.Messaging.MessagingExtensions.MessageHandlerBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessagingExtensions
    name: MessagingExtensions
    href: Sora.Messaging.MessagingExtensions.html
  - name: .
  - uid: Sora.Messaging.MessagingExtensions.MessageHandlerBuilder
    name: MessageHandlerBuilder
    href: Sora.Messaging.MessagingExtensions.MessageHandlerBuilder.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Sora.Messaging.MessagingExtensions.OnBatch*
  commentId: Overload:Sora.Messaging.MessagingExtensions.OnBatch
  href: Sora.Messaging.MessagingExtensions.html#Sora_Messaging_MessagingExtensions_OnBatch__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Func_Sora_Messaging_MessageEnvelope_Sora_Messaging_Batch___0__System_Threading_CancellationToken_System_Threading_Tasks_Task__
  name: OnBatch
  nameWithType: MessagingExtensions.OnBatch
  fullName: Sora.Messaging.MessagingExtensions.OnBatch
- uid: System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task}
  commentId: T:System.Func{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<MessageEnvelope, Batch<T>, CancellationToken, Task>
  nameWithType: Func<MessageEnvelope, Batch<T>, CancellationToken, Task>
  fullName: System.Func<Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of MessageEnvelope, Batch(Of T), CancellationToken, Task)
  fullName.vb: System.Func(Of Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task)
  name.vb: Func(Of MessageEnvelope, Batch(Of T), CancellationToken, Task)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: Sora.Messaging.Batch`1
    name: Batch
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: Sora.Messaging.Batch`1
    name: Batch
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{{T}}}
  commentId: T:System.Action{Sora.Messaging.MessageEnvelope,Sora.Messaging.Batch{``0}}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<MessageEnvelope, Batch<T>>
  nameWithType: Action<MessageEnvelope, Batch<T>>
  fullName: System.Action<Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch<T>>
  nameWithType.vb: Action(Of MessageEnvelope, Batch(Of T))
  fullName.vb: System.Action(Of Sora.Messaging.MessageEnvelope, Sora.Messaging.Batch(Of T))
  name.vb: Action(Of MessageEnvelope, Batch(Of T))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: Sora.Messaging.Batch`1
    name: Batch
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: Sora.Messaging.Batch`1
    name: Batch
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task}
  commentId: T:System.Func{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0},System.Threading.CancellationToken,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<MessageEnvelope, IReadOnlyList<T>, CancellationToken, Task>
  nameWithType: Func<MessageEnvelope, IReadOnlyList<T>, CancellationToken, Task>
  fullName: System.Func<Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of MessageEnvelope, IReadOnlyList(Of T), CancellationToken, Task)
  fullName.vb: System.Func(Of Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task)
  name.vb: Func(Of MessageEnvelope, IReadOnlyList(Of T), CancellationToken, Task)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{{T}}}
  commentId: T:System.Action{Sora.Messaging.MessageEnvelope,System.Collections.Generic.IReadOnlyList{``0}}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<MessageEnvelope, IReadOnlyList<T>>
  nameWithType: Action<MessageEnvelope, IReadOnlyList<T>>
  fullName: System.Action<Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList<T>>
  nameWithType.vb: Action(Of MessageEnvelope, IReadOnlyList(Of T))
  fullName.vb: System.Action(Of Sora.Messaging.MessageEnvelope, System.Collections.Generic.IReadOnlyList(Of T))
  name.vb: Action(Of MessageEnvelope, IReadOnlyList(Of T))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Sora.Messaging.MessageEnvelope
    name: MessageEnvelope
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
